package org.cryptoluka.entity;
// Generated 21-jul-2018 5:43:51 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Rollhistory generated by hbm2java
 */
@Entity
@Table(name="rollhistory"
    ,catalog="dice"
)
public class Rollhistory  implements java.io.Serializable {


     private String idgame;
     private Player player;
     private String nickname;
     private BigDecimal bet;
     private BigDecimal target;
     private int number;
     private BigDecimal profit;
     private Boolean result;
     private Date creationtime;
     private Date lastupdate;

    public Rollhistory() {
    }

	
    public Rollhistory(String idgame, Player player, String nickname, BigDecimal bet, BigDecimal target, int number, BigDecimal profit, Date creationtime) {
        this.idgame = idgame;
        this.player = player;
        this.nickname = nickname;
        this.bet = bet;
        this.target = target;
        this.number = number;
        this.profit = profit;
        this.creationtime = creationtime;
    }
    public Rollhistory(String idgame, Player player, String nickname, BigDecimal bet, BigDecimal target, int number, BigDecimal profit, Boolean result, Date creationtime, Date lastupdate) {
       this.idgame = idgame;
       this.player = player;
       this.nickname = nickname;
       this.bet = bet;
       this.target = target;
       this.number = number;
       this.profit = profit;
       this.result = result;
       this.creationtime = creationtime;
       this.lastupdate = lastupdate;
    }
   
     @Id 

    
    @Column(name="idgame", unique=true, nullable=false, length=36)
    public String getIdgame() {
        return this.idgame;
    }
    
    public void setIdgame(String idgame) {
        this.idgame = idgame;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idplayer", nullable=false)
    public Player getPlayer() {
        return this.player;
    }
    
    public void setPlayer(Player player) {
        this.player = player;
    }

    
    @Column(name="nickname", nullable=false, length=100)
    public String getNickname() {
        return this.nickname;
    }
    
    public void setNickname(String nickname) {
        this.nickname = nickname;
    }

    
    @Column(name="bet", nullable=false, precision=15, scale=8)
    public BigDecimal getBet() {
        return this.bet;
    }
    
    public void setBet(BigDecimal bet) {
        this.bet = bet;
    }

    
    @Column(name="target", nullable=false, precision=2)
    public BigDecimal getTarget() {
        return this.target;
    }
    
    public void setTarget(BigDecimal target) {
        this.target = target;
    }

    
    @Column(name="number", nullable=false, precision=5, scale=0)
    public int getNumber() {
        return this.number;
    }
    
    public void setNumber(int number) {
        this.number = number;
    }

    
    @Column(name="profit", nullable=false, precision=15, scale=8)
    public BigDecimal getProfit() {
        return this.profit;
    }
    
    public void setProfit(BigDecimal profit) {
        this.profit = profit;
    }

    
    @Column(name="result")
    public Boolean getResult() {
        return this.result;
    }
    
    public void setResult(Boolean result) {
        this.result = result;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="creationtime", nullable=false, length=19)
    public Date getCreationtime() {
        return this.creationtime;
    }
    
    public void setCreationtime(Date creationtime) {
        this.creationtime = creationtime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastupdate", length=19)
    public Date getLastupdate() {
        return this.lastupdate;
    }
    
    public void setLastupdate(Date lastupdate) {
        this.lastupdate = lastupdate;
    }




}


